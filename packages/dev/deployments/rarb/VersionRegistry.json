{
  "address": "0x694beb62BCF180F841a021e08FC8B016e66a6d17",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "version",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "VersionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "version",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VersionCanceled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "version",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "addVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "version",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "cancelVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x51309fa1a42713e1e2c7665af3687126405b9a49363ace453bf2222b1113ae5e",
  "receipt": {
    "to": null,
    "from": "0xd21934eD8eAf27a67f0A70042Af50A1D6d195E81",
    "contractAddress": "0x694beb62BCF180F841a021e08FC8B016e66a6d17",
    "transactionIndex": 0,
    "gasUsed": "10830504",
    "logsBloom": "0x
    "blockHash": "0xe61379a1aaf6866d8d7b7753e50dbaff236a8be5c1343ebef4c846cefeab843b",
    "transactionHash": "0x51309fa1a42713e1e2c7665af3687126405b9a49363ace453bf2222b1113ae5e",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 7940185,
        "transactionHash": "0x51309fa1a42713e1e2c7665af3687126405b9a49363ace453bf2222b1113ae5e",
        "address": "0x694beb62BCF180F841a021e08FC8B016e66a6d17",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d21934ed8eaf27a67f0a70042af50a1d6d195e81"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xe61379a1aaf6866d8d7b7753e50dbaff236a8be5c1343ebef4c846cefeab843b"
      }
    ],
    "blockNumber": 7940185,
    "cumulativeGasUsed": "7844644",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "82b5270a3508b1f236ef759e7a80de08",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"VersionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VersionCanceled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"addVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"cancelVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addVersion(bytes32,bytes32,string)\":{\"params\":{\"id\":\"the object-id to add a version (32-byte string)\",\"value\":\"value to attach to this version\",\"version\":\"the new version to add (32-byte string)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addVersion(bytes32,bytes32,string)\":{\"notice\":\"add a version\"},\"cancelVersion(bytes32,bytes32,string)\":{\"notice\":\"cancel a version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts-link/utils/VersionRegistry.sol\":\"VersionRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts-link/interfaces/IVersionRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\ninterface IVersionRegistry {\\n\\n    //event emitted whenever a version is added\\n    event VersionAdded(bytes32 indexed id, bytes32 version, string value, uint time);\\n\\n    //event emitted whenever a version is canceled\\n    event VersionCanceled(bytes32 indexed id, bytes32 version, string reason);\\n\\n    /**\\n     * add a version\\n     * @param id the object-id to add a version (32-byte string)\\n     * @param version the new version to add (32-byte string)\\n     * @param value value to attach to this version\\n     */\\n    function addVersion(bytes32 id, bytes32 version, string calldata value) external;\\n\\n    /**\\n     * cancel a version.\\n     */\\n    function cancelVersion(bytes32 id, bytes32 version, string calldata reason) external;\\n}\\n\",\"keccak256\":\"0xadd1b74e1fcd4cab46f97bb3767d91cc6b29647b089b2deb039df77797c34f1c\",\"license\":\"GPL-3.0-only\"},\"contracts-link/utils/VersionRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n// solhint-disable not-rely-on-time\\n\\nimport \\\"../interfaces/IVersionRegistry.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract VersionRegistry is IVersionRegistry, Ownable {\\n\\n    function addVersion(bytes32 id, bytes32 version, string calldata value) external override onlyOwner {\\n        require(id != bytes32(0), \\\"missing id\\\");\\n        require(version != bytes32(0), \\\"missing version\\\");\\n        emit VersionAdded(id, version, value, block.timestamp);\\n    }\\n\\n    function cancelVersion(bytes32 id, bytes32 version, string calldata reason) external override onlyOwner {\\n        emit VersionCanceled(id, version, reason);\\n    }\\n}\\n\",\"keccak256\":\"0xeaa81ff3065d7c28b68e474085ce253fd54722b7d9bba768b19c74d2c5243812\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104bf8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063089eae7e1461005c578063219ae67214610071578063715018a6146100845780638da5cb5b1461008c578063f2fde38b146100ab575b600080fd5b61006f61006a36600461035d565b6100be565b005b61006f61007f36600461035d565b6101ae565b61006f61020c565b600054604080516001600160a01b039092168252519081900360200190f35b61006f6100b936600461032d565b610242565b6000546001600160a01b031633146100f15760405162461bcd60e51b81526004016100e890610454565b60405180910390fd5b8361012b5760405162461bcd60e51b815260206004820152600a6024820152691b5a5cdcda5b99c81a5960b21b60448201526064016100e8565b8261016a5760405162461bcd60e51b815260206004820152600f60248201526e36b4b9b9b4b733903b32b939b4b7b760891b60448201526064016100e8565b837f56950023a84954108e1797b4f116b9339e395c7dfe94f9dd60b64806de93d3f8848484426040516101a09493929190610429565b60405180910390a250505050565b6000546001600160a01b031633146101d85760405162461bcd60e51b81526004016100e890610454565b837f488c2df78ad692792ecea5763ee0cb43065ea3110cf94e887b6f870129b70b508484846040516101a093929190610406565b6000546001600160a01b031633146102365760405162461bcd60e51b81526004016100e890610454565b61024060006102dd565b565b6000546001600160a01b0316331461026c5760405162461bcd60e51b81526004016100e890610454565b6001600160a01b0381166102d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100e8565b6102da816102dd565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033f57600080fd5b81356001600160a01b038116811461035657600080fd5b9392505050565b6000806000806060858703121561037357600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561039957600080fd5b818701915087601f8301126103ad57600080fd5b8135818111156103bc57600080fd5b8860208285010111156103ce57600080fd5b95989497505060200194505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006104206040830184866103dd565b95945050505050565b8481526060602082015260006104436060830185876103dd565b905082604083015295945050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212202abe6921f07382d97cca37b71b7cbb2dca40e2ff795f761d76a27397d0cb9d8364736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063089eae7e1461005c578063219ae67214610071578063715018a6146100845780638da5cb5b1461008c578063f2fde38b146100ab575b600080fd5b61006f61006a36600461035d565b6100be565b005b61006f61007f36600461035d565b6101ae565b61006f61020c565b600054604080516001600160a01b039092168252519081900360200190f35b61006f6100b936600461032d565b610242565b6000546001600160a01b031633146100f15760405162461bcd60e51b81526004016100e890610454565b60405180910390fd5b8361012b5760405162461bcd60e51b815260206004820152600a6024820152691b5a5cdcda5b99c81a5960b21b60448201526064016100e8565b8261016a5760405162461bcd60e51b815260206004820152600f60248201526e36b4b9b9b4b733903b32b939b4b7b760891b60448201526064016100e8565b837f56950023a84954108e1797b4f116b9339e395c7dfe94f9dd60b64806de93d3f8848484426040516101a09493929190610429565b60405180910390a250505050565b6000546001600160a01b031633146101d85760405162461bcd60e51b81526004016100e890610454565b837f488c2df78ad692792ecea5763ee0cb43065ea3110cf94e887b6f870129b70b508484846040516101a093929190610406565b6000546001600160a01b031633146102365760405162461bcd60e51b81526004016100e890610454565b61024060006102dd565b565b6000546001600160a01b0316331461026c5760405162461bcd60e51b81526004016100e890610454565b6001600160a01b0381166102d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100e8565b6102da816102dd565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033f57600080fd5b81356001600160a01b038116811461035657600080fd5b9392505050565b6000806000806060858703121561037357600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561039957600080fd5b818701915087601f8301126103ad57600080fd5b8135818111156103bc57600080fd5b8860208285010111156103ce57600080fd5b95989497505060200194505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006104206040830184866103dd565b95945050505050565b8481526060602082015260006104436060830185876103dd565b905082604083015295945050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212202abe6921f07382d97cca37b71b7cbb2dca40e2ff795f761d76a27397d0cb9d8364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addVersion(bytes32,bytes32,string)": {
        "params": {
          "id": "the object-id to add a version (32-byte string)",
          "value": "value to attach to this version",
          "version": "the new version to add (32-byte string)"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addVersion(bytes32,bytes32,string)": {
        "notice": "add a version"
      },
      "cancelVersion(bytes32,bytes32,string)": {
        "notice": "cancel a version."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts-link/utils/VersionRegistry.sol:VersionRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}